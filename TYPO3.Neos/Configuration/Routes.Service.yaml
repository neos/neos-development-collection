#                                                                        #
# "Service" subroutes configuration for the TYPO3.Neos package           #
#                                                                        #

# RESTful routes for Nodes service
-
  name: 'Nodes - index'
  uriPattern: 'nodes'
  defaults:
    '@controller': 'Service\Nodes'
    '@action':     'index'
  appendExceedingArguments: TRUE
  httpMethods: ['GET']

-
  name: 'Nodes - single node'
  uriPattern: 'nodes/{identifier}'
  defaults:
    '@controller': 'Service\Nodes'
    '@action':     'show'
  appendExceedingArguments: TRUE
  httpMethods: ['HEAD', 'GET']

-
  name: 'Nodes - create/adopt node'
  uriPattern: 'nodes'
  defaults:
    '@controller': 'Service\Nodes'
    '@action':     'create'
  appendExceedingArguments: TRUE
  httpMethods: ['POST']

# UserPreferencesController routes
-
  name: 'Services - UserPreferencesController->index'
  uriPattern: 'user-preferences'
  defaults:
    '@package':    'TYPO3.Neos'
    '@subpackage': 'Service'
    '@controller': 'UserPreference'
    '@action':     'index'
  httpMethods: ['GET']

-
  name: 'Services - UserPreferencesController->update'
  uriPattern: 'user-preferences'
  defaults:
    '@package':    'TYPO3.Neos'
    '@subpackage': 'Service'
    '@controller': 'UserPreference'
    '@action':     'update'
  httpMethods: ['PUT']

# RESTful routes for Assets service
-
  name: 'Assets - index'
  uriPattern: 'assets'
  defaults:
    '@controller': 'Service\Assets'
    '@action':     'index'
  appendExceedingArguments: TRUE
  httpMethods: ['GET']

-
  name: 'Assets - single asset'
  uriPattern: 'assets/{identifier}'
  defaults:
    '@controller': 'Service\Assets'
    '@action':     'show'
  appendExceedingArguments: TRUE
  httpMethods: ['HEAD', 'GET']

# RESTful WorkspacesController routes

-
  name: 'Services - WorkspacesController->indexAction()'
  uriPattern: 'workspaces'
  defaults:
    '@package':    'TYPO3.Neos'
    '@controller': 'Service\Workspaces'
    '@action':     'index'
  appendExceedingArguments: TRUE
  httpMethods: ['GET']

-
  name: 'Services - WorkspacesController->showAction()'
  uriPattern: 'workspaces/{workspace}'
  defaults:
    '@package':    'TYPO3.Neos'
    '@controller': 'Service\Workspaces'
    '@action':     'show'
  httpMethods: ['GET']

-
  name: 'Services - WorkspacesController->createAction()'
  uriPattern: 'workspaces/{baseWorkspace}/{workspaceName}'
  defaults:
    '@package':    'TYPO3.Neos'
    '@controller': 'Service\Workspaces'
    '@action':     'create'
  httpMethods: ['POST']

# Note: we need to specify the workspace as {workspace.__identity} in the uriPattern because if we just used
# {workspace}, the properties could not be overridden through the parameters in the PUT request's body.
# This is a shortcoming of the DispatchComponent and should be solved in a future version of Flow.
-
  name: 'Services - WorkspacesController->updateAction()'
  uriPattern: 'workspaces/{workspace.__identity}'
  defaults:
    '@package':    'TYPO3.Neos'
    '@controller': 'Service\Workspaces'
    '@action':     'update'
  appendExceedingArguments: TRUE
  httpMethods: ['PUT']

# Legacy WorkspaceController routes
-
  name: 'Services - WorkspaceController->getWorkspaceWideUnpublishedNodes'
  uriPattern: 'workspaces-rpc/get-workspace-wide-unpublished-nodes'
  defaults:
    '@package':    'TYPO3.Neos'
    '@subpackage': 'Service'
    '@action':     'getWorkspaceWideUnpublishedNodes'
    '@controller': 'Workspace'
  appendExceedingArguments: TRUE
  httpMethods: ['GET']

-
  name: 'Services - WorkspaceController->publishNode'
  uriPattern: 'workspaces-rpc/publish-node'
  defaults:
    '@package':    'TYPO3.Neos'
    '@subpackage': 'Service'
    '@action':     'publishNode'
    '@controller': 'Workspace'
  httpMethods: ['PUT']

-
  name: 'Services - WorkspaceController->publishNodes'
  uriPattern: 'workspaces-rpc/publish-nodes'
  defaults:
    '@package':    'TYPO3.Neos'
    '@subpackage': 'Service'
    '@action':     'publishNodes'
    '@controller': 'Workspace'
  httpMethods: ['PUT']

-
  name: 'Services - WorkspaceController->discardNode'
  uriPattern: 'workspaces-rpc/discard-node'
  defaults:
    '@package':    'TYPO3.Neos'
    '@subpackage': 'Service'
    '@action':     'discardNode'
    '@controller': 'Workspace'
  httpMethods: ['PUT']

-
  name: 'Services - WorkspaceController->discardNodes'
  uriPattern: 'workspaces-rpc/discard-nodes'
  defaults:
    '@package':    'TYPO3.Neos'
    '@subpackage': 'Service'
    '@action':     'discardNodes'
    '@controller': 'Workspace'
  httpMethods: ['PUT']

-
  name: 'Services - WorkspaceController->publishAll'
  uriPattern: 'workspaces-rpc/publish-all'
  defaults:
    '@package':    'TYPO3.Neos'
    '@subpackage': 'Service'
    '@action':     'publishAll'
    '@controller': 'Workspace'
  httpMethods: ['PUT']

-
  name: 'Services - WorkspaceController->discardAll'
  uriPattern: 'workspaces-rpc/discard-all'
  defaults:
    '@package':    'TYPO3.Neos'
    '@subpackage': 'Service'
    '@action':     'discardAll'
    '@controller': 'Workspace'
  httpMethods: ['PUT']

# NodeController routes
-
  name: 'Services - NodeController->getChildNodesForTree'
  uriPattern: 'node/get-child-nodes-for-tree'
  defaults:
    '@package':    'TYPO3.Neos'
    '@subpackage': 'Service'
    '@controller': 'Node'
    '@action':     'getChildNodesForTree'
  httpMethods: ['GET']

-
  name: 'Services - NodeController->filterChildNodesForTree'
  uriPattern: 'node/filter-child-nodes-for-tree'
  defaults:
    '@package':    'TYPO3.Neos'
    '@subpackage': 'Service'
    '@controller': 'Node'
    '@action':     'filterChildNodesForTree'
  httpMethods: ['GET']

-
  name: 'Services - NodeController->searchPage'
  uriPattern: 'node/search-page'
  defaults:
    '@package':    'TYPO3.Neos'
    '@subpackage': 'Service'
    '@controller': 'Node'
    '@action':     'searchPage'
  httpMethods: ['GET']

-
  name: 'Services - NodeController->create'
  uriPattern: 'node/create'
  defaults:
    '@package':    'TYPO3.Neos'
    '@subpackage': 'Service'
    '@controller': 'Node'
    '@action':     'create'
  httpMethods: ['POST']

-
  name: 'Services - NodeController->createAndRender'
  uriPattern: 'node/create-and-render'
  defaults:
    '@package':    'TYPO3.Neos'
    '@subpackage': 'Service'
    '@controller': 'Node'
    '@action':     'createAndRender'
    '@format':     'json'
  httpMethods: ['POST']

-
  name: 'Services - NodeController->createNodeForTheTree'
  uriPattern: 'node/create-node-for-the-tree'
  defaults:
    '@package':    'TYPO3.Neos'
    '@subpackage': 'Service'
    '@controller': 'Node'
    '@action':     'createNodeForTheTree'
  httpMethods: ['POST']

-
  name: 'Services - NodeController->discardNode'
  uriPattern: 'node/discard-node'
  defaults:
    '@package':    'TYPO3.Neos'
    '@subpackage': 'Service'
    '@controller': 'Node'
    '@action':     'discardNode'
  httpMethods: ['PUT']

-
  name: 'Services - NodeController->move'
  uriPattern: 'node/move'
  defaults:
    '@package':    'TYPO3.Neos'
    '@subpackage': 'Service'
    '@controller': 'Node'
    '@action':     'move'
  httpMethods: ['PUT']

-
  name: 'Services - NodeController->moveAndRender'
  uriPattern: 'node/move-and-render'
  defaults:
    '@package':    'TYPO3.Neos'
    '@subpackage': 'Service'
    '@controller': 'Node'
    '@action':     'moveAndRender'
    '@format':     'json'
  httpMethods: ['PUT']

-
  name: 'Services - NodeController->copy'
  uriPattern: 'node/copy'
  defaults:
    '@package':    'TYPO3.Neos'
    '@subpackage': 'Service'
    '@controller': 'Node'
    '@action':     'copy'
  httpMethods: ['PUT']

-
  name: 'Services - NodeController->copyAndRender'
  uriPattern: 'node/copy-and-render'
  defaults:
    '@package':    'TYPO3.Neos'
    '@subpackage': 'Service'
    '@controller': 'Node'
    '@action':     'copyAndRender'
    '@format':     'json'
  httpMethods: ['PUT']

-
  name: 'Services - NodeController->update'
  uriPattern: 'node/update'
  defaults:
    '@package':    'TYPO3.Neos'
    '@subpackage': 'Service'
    '@controller': 'Node'
    '@action':     'update'
  httpMethods: ['PUT']

-
  name: 'Services - NodeController->updateAndRender'
  uriPattern: 'node/update-and-render'
  defaults:
    '@package':    'TYPO3.Neos'
    '@subpackage': 'Service'
    '@controller': 'Node'
    '@action':     'updateAndRender'
    '@format':     'json'
  httpMethods: ['PUT']

-
  name: 'Services - NodeController->delete'
  uriPattern: 'node/delete'
  defaults:
    '@package':    'TYPO3.Neos'
    '@subpackage': 'Service'
    '@controller': 'Node'
    '@action':     'delete'
  # TODO: make DELETE method with the full REST implementation
  # For now we can not use DELETE and also pass arguments using the request body,
  # and client side we don\t have a UrlTemplates implementation yet
  httpMethods: ['POST']

# DataSourceController routes
-
  name: 'Services - DataSourceController->index'
  uriPattern: 'data-source(/{dataSourceIdentifier)'
  defaults:
    '@package':    'TYPO3.Neos'
    '@subpackage': 'Service'
    '@controller': 'DataSource'
    '@action':     'index'
    '@format':     'json'
    dataSourceIdentifier: ''
  appendExceedingArguments: TRUE
  httpMethods: ['GET']

# ContentDimensionController routes
-
  name: 'Services - ContentDimensionController->index()'
  uriPattern: 'content-dimensions'
  defaults:
    '@package':    'TYPO3.Neos'
    '@controller': 'Service\ContentDimensions'
    '@action':     'index'
  appendExceedingArguments: TRUE
  httpMethods: ['GET']

-
  name: 'Services - ContentDimensionController->show()'
  uriPattern: 'content-dimensions/{dimensionName}'
  defaults:
    '@package':    'TYPO3.Neos'
    '@controller': 'Service\ContentDimensions'
    '@action':     'show'
  appendExceedingArguments: TRUE
  httpMethods: ['GET']
