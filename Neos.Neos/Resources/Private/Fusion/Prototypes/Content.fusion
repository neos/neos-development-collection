# This is the base Content Fusion object
# It must be extended by all elements that are selectable in the backend
#
# Note: This object inherits from Neos.Fusion:Template because most Content Elements are expected to contain a
# Fluid template. If a Content Element does not render a template (like it is the case for the Plugin Content Elements)
# you should still extend this prototype and override the @class property (see Neos.Neos:Plugin).
#
prototype(Neos.Neos:Content) < prototype(Neos.Fusion:Template) {
  node = ${node}

  attributes = Neos.Fusion:DataStructure
  attributes.class = ''

  # The following is used to automatically append a class attribute that reflects the underlying node type of a Fusion object,
  # for example "neos-nodetypes-form", "neos-nodetypes-headline", "neos-nodetypes-html", "neos-nodetypes-image", "neos-nodetypes-menu" and "neos-nodetypes-text"
  # You can disable the following line with:
  # prototype(Neos.Neos:Content) {
  #   attributes.class.@process.nodeType >
  # }
  # in your site's Fusion if you don't need that behavior.
  attributes.class.@process.nodeType = ${Array.push(value, String.toLowerCase(String.pregReplace(node.nodeTypeName.value, '/[[:^alnum:]]/', '-')))}

  # The following line must not be removed as it adds required meta data to all content elements in backend
  @process.contentElementWrapping {
    expression = Neos.Neos:ContentElementWrapping
    @position = 'end 999999999'
  }

  @exceptionHandler = 'Neos\\Neos\\Fusion\\ExceptionHandlers\\NodeWrappingHandler'
}
