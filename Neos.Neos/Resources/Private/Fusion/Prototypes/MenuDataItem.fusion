prototype(Neos.Neos:MenuDataItem) < prototype(Neos.Fusion:Component) {
  currentDocumentNode = null
  menuItemNode = null
  rootline = ${q(this.currentDocumentNode).parents().get()}

  renderer = Neos.Fusion:DataStructure {
    @if.renderHiddenOrVisible = ${props.renderHiddenInIndex || !q(props.menuItemNode).property('_hiddenInIndex')}

    state = Neos.Fusion:Case {
      isCurrent {
        condition = ${props.menuItemNode == props.currentDocumentNode}
        renderer = 'current'
      }

      isAbsent {
        condition = ${props.menuItemNode == null}
        renderer = 'absent'
      }

      isActive {
        condition = ${Array.indexOf(props.rootline, props.menuItemNode) != -1}
        renderer = 'active'
      }

      default {
        condition = ${true}
        renderer = 'normal'
      }
    }

    node = ${props.menuItemNode}

    label = ${q(props.menuItemNode).property('_label')}

    subItems = Neos.Neos:MenuData {
      @if.renderLevel = ${props.lastLevel ? props.currentLevel < props.lastLevel : props.currentLevel < (props.entryLevel + props.maximumLevels)}
      itemCollection = ${q(props.menuItemNode).children('[instanceof Neos.Neos:Document]').get()}
      currentLevel = ${props.currentLevel + 1}
      renderHiddenInIndex = ${props.renderHiddenInIndex}
      entryLevel = ${props.entryLevel}
      lastLevel = ${props.lastLevel}
    }

    menuLevel = ${props.currentLevel}
  }
}
