# The error matcher used to render errors that are configured for fusion rendering
#
# The matcher receives the context values `exception`, `renderingOptions`, `statusCode`,
# `statusMessage` and `referenceCode`.
#
# By default the standard error template is rendered, but by extending the matcher
# custom rendering can be implemented
#
error = Neos.Fusion:Case {
  default {
    @position = 'end 9999'
    condition = true
    renderer = Neos.Neos:DefaultExceptionRenderer {
      exception = ${exception}
      renderingOptions = ${renderingOptions}
      statusCode = ${statusCode}
      statusMessage = ${statusMessage}
      referenceCode = ${referenceCode}
    }
  }
}

/** @internal */
prototype(Neos.Neos:DefaultExceptionRenderer) < prototype(Neos.Fusion:Component) {
  /** @var exception \Exception */
  exception = null
  renderingOptions = null

  renderer = afx`
    <Neos.Neos:ErrorPage title='Neos Error'>
      <body class="neos">
      <div class="neos-error-screen">
        <div class="neos-message-header">
          <div class="neos-message-icon">
            <i class="fas fa-exclamation-triangle"></i>
          </div>
          <h1>{Translation.id('error.exception.' + props.renderingOptions.renderingGroup + '.title').package('Neos.Neos').locale(Neos.Backend.interfaceLanguage()).translate()}</h1>
        </div>
        <p>
          {String.nl2br(Translation.id('error.exception.' + props.renderingOptions.renderingGroup + '.description').package('Neos.Neos').locale(Neos.Backend.interfaceLanguage()).translate())}
        </p>
        <p @if={props.renderingOptions.renderTechnicalDetails} class="technical-details">#{props.exception.code}: {props.exception.message}</p>
      </div>
      </body>
    </Neos.Neos:ErrorPage>
  `
}
