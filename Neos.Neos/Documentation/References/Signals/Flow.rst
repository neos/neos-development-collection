.. _`Flow Signals Reference`:

Flow Signals Reference
======================

This reference was automatically generated from code on 2023-06-27


.. _`Flow Signals Reference: AbstractAdvice (``Neos\Flow\Aop\Advice\AbstractAdvice``)`:

AbstractAdvice (``Neos\Flow\Aop\Advice\AbstractAdvice``)
--------------------------------------------------------

This class contains the following signals.

adviceInvoked
^^^^^^^^^^^^^

Emits a signal when an Advice is invoked

The advice is not proxyable, so the signal is dispatched manually here.






.. _`Flow Signals Reference: AbstractAuthenticationController (``Neos\Flow\Security\Authentication\Controller\AbstractAuthenticationController``)`:

AbstractAuthenticationController (``Neos\Flow\Security\Authentication\Controller\AbstractAuthenticationController``)
--------------------------------------------------------------------------------------------------------------------

This class contains the following signals.

viewResolved
^^^^^^^^^^^^

Autogenerated Proxy Method

Emit that the view is resolved. The passed ViewInterface reference,
gives the possibility to add variables to the view,
before passing it on to further rendering

viewResolved
^^^^^^^^^^^^

Autogenerated Proxy Method

Emit that the view is resolved. The passed ViewInterface reference,
gives the possibility to add variables to the view,
before passing it on to further rendering






.. _`Flow Signals Reference: ActionController (``Neos\Flow\Mvc\Controller\ActionController``)`:

ActionController (``Neos\Flow\Mvc\Controller\ActionController``)
----------------------------------------------------------------

This class contains the following signals.

viewResolved
^^^^^^^^^^^^

Autogenerated Proxy Method

Emit that the view is resolved. The passed ViewInterface reference,
gives the possibility to add variables to the view,
before passing it on to further rendering

viewResolved
^^^^^^^^^^^^

Autogenerated Proxy Method

Emit that the view is resolved. The passed ViewInterface reference,
gives the possibility to add variables to the view,
before passing it on to further rendering






.. _`Flow Signals Reference: ActionRequest (``Neos\Flow\Mvc\ActionRequest``)`:

ActionRequest (``Neos\Flow\Mvc\ActionRequest``)
-----------------------------------------------

This class contains the following signals.

requestDispatched
^^^^^^^^^^^^^^^^^

Autogenerated Proxy Method

Emits a signal when a Request has been dispatched

The action request is not proxyable, so the signal is dispatched manually here.
The safeguard allows unit tests without the dispatcher dependency.






.. _`Flow Signals Reference: AfterAdvice (``Neos\Flow\Aop\Advice\AfterAdvice``)`:

AfterAdvice (``Neos\Flow\Aop\Advice\AfterAdvice``)
--------------------------------------------------

This class contains the following signals.

adviceInvoked
^^^^^^^^^^^^^

Emits a signal when an Advice is invoked

The advice is not proxyable, so the signal is dispatched manually here.






.. _`Flow Signals Reference: AfterReturningAdvice (``Neos\Flow\Aop\Advice\AfterReturningAdvice``)`:

AfterReturningAdvice (``Neos\Flow\Aop\Advice\AfterReturningAdvice``)
--------------------------------------------------------------------

This class contains the following signals.

adviceInvoked
^^^^^^^^^^^^^

Emits a signal when an Advice is invoked

The advice is not proxyable, so the signal is dispatched manually here.






.. _`Flow Signals Reference: AfterThrowingAdvice (``Neos\Flow\Aop\Advice\AfterThrowingAdvice``)`:

AfterThrowingAdvice (``Neos\Flow\Aop\Advice\AfterThrowingAdvice``)
------------------------------------------------------------------

This class contains the following signals.

adviceInvoked
^^^^^^^^^^^^^

Emits a signal when an Advice is invoked

The advice is not proxyable, so the signal is dispatched manually here.






.. _`Flow Signals Reference: AroundAdvice (``Neos\Flow\Aop\Advice\AroundAdvice``)`:

AroundAdvice (``Neos\Flow\Aop\Advice\AroundAdvice``)
----------------------------------------------------

This class contains the following signals.

adviceInvoked
^^^^^^^^^^^^^

Emits a signal when an Advice is invoked

The advice is not proxyable, so the signal is dispatched manually here.






.. _`Flow Signals Reference: AuthenticationProviderManager (``Neos\Flow\Security\Authentication\AuthenticationProviderManager``)`:

AuthenticationProviderManager (``Neos\Flow\Security\Authentication\AuthenticationProviderManager``)
---------------------------------------------------------------------------------------------------

This class contains the following signals.

authenticatedToken
^^^^^^^^^^^^^^^^^^

Autogenerated Proxy Method

Signals that the specified token has been successfully authenticated.

loggedOut
^^^^^^^^^

Autogenerated Proxy Method

Signals that all active authentication tokens have been invalidated.
Note: the session will be destroyed after this signal has been emitted.

successfullyAuthenticated
^^^^^^^^^^^^^^^^^^^^^^^^^

Autogenerated Proxy Method

Signals that authentication commenced and at least one token was authenticated.






.. _`Flow Signals Reference: BeforeAdvice (``Neos\Flow\Aop\Advice\BeforeAdvice``)`:

BeforeAdvice (``Neos\Flow\Aop\Advice\BeforeAdvice``)
----------------------------------------------------

This class contains the following signals.

adviceInvoked
^^^^^^^^^^^^^

Emits a signal when an Advice is invoked

The advice is not proxyable, so the signal is dispatched manually here.






.. _`Flow Signals Reference: Bootstrap (``Neos\Flow\Core\Bootstrap``)`:

Bootstrap (``Neos\Flow\Core\Bootstrap``)
----------------------------------------

This class contains the following signals.

finishedCompiletimeRun
^^^^^^^^^^^^^^^^^^^^^^

Emits a signal that the compile run was finished.

finishedRuntimeRun
^^^^^^^^^^^^^^^^^^

Emits a signal that the runtime run was finished.

bootstrapShuttingDown
^^^^^^^^^^^^^^^^^^^^^

Emits a signal that the bootstrap finished and is shutting down.






.. _`Flow Signals Reference: CacheCommandController (``Neos\Flow\Command\CacheCommandController``)`:

CacheCommandController (``Neos\Flow\Command\CacheCommandController``)
---------------------------------------------------------------------

This class contains the following signals.

warmupCaches
^^^^^^^^^^^^

Autogenerated Proxy Method

Signals that caches should be warmed up.

Other application parts may subscribe to this signal and execute additional
tasks for preparing the application for the first request.






.. _`Flow Signals Reference: Compiler (``Neos\Flow\ObjectManagement\Proxy\Compiler``)`:

Compiler (``Neos\Flow\ObjectManagement\Proxy\Compiler``)
--------------------------------------------------------

This class contains the following signals.

compiledClasses
^^^^^^^^^^^^^^^








.. _`Flow Signals Reference: ConfigurationManager (``Neos\Flow\Configuration\ConfigurationManager``)`:

ConfigurationManager (``Neos\Flow\Configuration\ConfigurationManager``)
-----------------------------------------------------------------------

This class contains the following signals.

configurationManagerReady
^^^^^^^^^^^^^^^^^^^^^^^^^

Emits a signal after The ConfigurationManager has been loaded






.. _`Flow Signals Reference: CoreCommandController (``Neos\Flow\Command\CoreCommandController``)`:

CoreCommandController (``Neos\Flow\Command\CoreCommandController``)
-------------------------------------------------------------------

This class contains the following signals.

finishedCompilationRun
^^^^^^^^^^^^^^^^^^^^^^

Signals that the compile command was successfully finished.






.. _`Flow Signals Reference: Dispatcher (``Neos\Flow\Mvc\Dispatcher``)`:

Dispatcher (``Neos\Flow\Mvc\Dispatcher``)
-----------------------------------------

This class contains the following signals.

beforeControllerInvocation
^^^^^^^^^^^^^^^^^^^^^^^^^^

Autogenerated Proxy Method

This signal is emitted directly before the request is been dispatched to a controller.

afterControllerInvocation
^^^^^^^^^^^^^^^^^^^^^^^^^

Autogenerated Proxy Method

This signal is emitted directly after the request has been dispatched to a controller and the controller
returned control back to the dispatcher.






.. _`Flow Signals Reference: DoctrineCommandController (``Neos\Flow\Command\DoctrineCommandController``)`:

DoctrineCommandController (``Neos\Flow\Command\DoctrineCommandController``)
---------------------------------------------------------------------------

This class contains the following signals.

afterDatabaseMigration
^^^^^^^^^^^^^^^^^^^^^^








.. _`Flow Signals Reference: EntityManagerFactory (``Neos\Flow\Persistence\Doctrine\EntityManagerFactory``)`:

EntityManagerFactory (``Neos\Flow\Persistence\Doctrine\EntityManagerFactory``)
------------------------------------------------------------------------------

This class contains the following signals.

beforeDoctrineEntityManagerCreation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



afterDoctrineEntityManagerCreation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^








.. _`Flow Signals Reference: PackageManager (``Neos\Flow\Package\PackageManager``)`:

PackageManager (``Neos\Flow\Package\PackageManager``)
-----------------------------------------------------

This class contains the following signals.

packageStatesUpdated
^^^^^^^^^^^^^^^^^^^^

Emits a signal when package states have been changed (e.g. when a package was created)

The advice is not proxyable, so the signal is dispatched manually here.






.. _`Flow Signals Reference: PersistenceManager (``Neos\Flow\Persistence\Doctrine\PersistenceManager``)`:

PersistenceManager (``Neos\Flow\Persistence\Doctrine\PersistenceManager``)
--------------------------------------------------------------------------

This class contains the following signals.

allObjectsPersisted
^^^^^^^^^^^^^^^^^^^

Autogenerated Proxy Method

Signals that all persistAll() has been executed successfully.






.. _`Flow Signals Reference: PolicyService (``Neos\Flow\Security\Policy\PolicyService``)`:

PolicyService (``Neos\Flow\Security\Policy\PolicyService``)
-----------------------------------------------------------

This class contains the following signals.

configurationLoaded
^^^^^^^^^^^^^^^^^^^

Autogenerated Proxy Method

Emits a signal when the policy configuration has been loaded

This signal can be used to add roles and/or privilegeTargets during runtime. In the slot make sure to receive the
$policyConfiguration array by reference so you can alter it.

rolesInitialized
^^^^^^^^^^^^^^^^

Autogenerated Proxy Method

Emits a signal when roles have been initialized

This signal can be used to register roles during runtime. In the slot make sure to receive the $roles array by
reference so you can alter it.






.. _`Flow Signals Reference: RestController (``Neos\Flow\Mvc\Controller\RestController``)`:

RestController (``Neos\Flow\Mvc\Controller\RestController``)
------------------------------------------------------------

This class contains the following signals.

viewResolved
^^^^^^^^^^^^

Autogenerated Proxy Method

Emit that the view is resolved. The passed ViewInterface reference,
gives the possibility to add variables to the view,
before passing it on to further rendering






.. _`Flow Signals Reference: SlaveRequestHandler (``Neos\Flow\Cli\SlaveRequestHandler``)`:

SlaveRequestHandler (``Neos\Flow\Cli\SlaveRequestHandler``)
-----------------------------------------------------------

This class contains the following signals.

dispatchedCommandLineSlaveRequest
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Emits a signal that a CLI slave request was dispatched.






.. _`Flow Signals Reference: StandardController (``Neos\Flow\Mvc\Controller\StandardController``)`:

StandardController (``Neos\Flow\Mvc\Controller\StandardController``)
--------------------------------------------------------------------

This class contains the following signals.

viewResolved
^^^^^^^^^^^^

Autogenerated Proxy Method

Emit that the view is resolved. The passed ViewInterface reference,
gives the possibility to add variables to the view,
before passing it on to further rendering





